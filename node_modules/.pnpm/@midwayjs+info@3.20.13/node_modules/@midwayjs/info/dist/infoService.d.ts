import { MidwayInformationService, IMidwayContainer, MidwayConfigService, MidwayEnvironmentService } from '@midwayjs/core';
import { InfoType, InfoValueType, TypeInfo } from './interface';
export declare class InfoService {
    midwayInformationService: MidwayInformationService;
    configService: MidwayConfigService;
    environment: MidwayEnvironmentService;
    titleConfig: string;
    defaultHiddenKey: string[];
    ignoreKey: string[];
    secretMatchList: Array<any>;
    container: IMidwayContainer;
    init(): Promise<void>;
    info(infoValueType?: InfoValueType): string | {
        type: string;
        info: {};
    }[];
    projectInfo(): TypeInfo;
    systemInfo(): TypeInfo;
    resourceOccupationInfo(): TypeInfo;
    softwareInfo(): TypeInfo;
    envInfo(): TypeInfo;
    timeInfo(): TypeInfo;
    networkInfo(): TypeInfo;
    dependenciesInfo(): TypeInfo;
    midwayService(): {
        type: InfoType;
        info: {};
    };
    midwayConfig(): {
        type: InfoType;
        info: {};
    };
    protected filterSecretContent(key: string, value: any): any;
    protected safeJson(value: any): string;
}
//# sourceMappingURL=infoService.d.ts.map