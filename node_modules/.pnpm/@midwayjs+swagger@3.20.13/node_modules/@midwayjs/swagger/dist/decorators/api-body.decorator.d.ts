import { ContentObject, ExamplesObject, ReferenceObject, RequestBodyObject, SchemaObject, SwaggerEnumType } from '../interfaces';
type RequestBodyOptions = Omit<RequestBodyObject, 'content'>;
export declare enum BodyContentType {
    FormUrlEncoded = "application/x-www-form-urlencoded",
    JSON = "application/json",
    Multipart = "multipart/form-data",
    MultipartMixed = "multipart/mixed",
    OctetStream = "application/octet-stream"
}
interface ApiBodyMetadata extends RequestBodyOptions {
    type?: any;
    isArray?: boolean;
    enum?: SwaggerEnumType;
    content?: ContentObject;
    contentType?: BodyContentType;
}
interface ApiBodySchemaHost extends RequestBodyOptions {
    schema: SchemaObject | ReferenceObject;
    examples?: ExamplesObject;
}
export type ApiBodyOptions = ApiBodyMetadata | ApiBodySchemaHost;
export declare function ApiBody(options: ApiBodyOptions): MethodDecorator;
export {};
//# sourceMappingURL=api-body.decorator.d.ts.map