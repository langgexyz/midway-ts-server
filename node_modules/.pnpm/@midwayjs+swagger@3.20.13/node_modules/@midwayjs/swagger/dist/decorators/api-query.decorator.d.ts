import { Type, ParameterObject, ReferenceObject, SchemaObject, SwaggerEnumType } from '../interfaces';
type ParameterOptions = Omit<ParameterObject, 'in' | 'schema' | 'name'>;
interface ApiQueryMetadata extends ParameterOptions {
    name?: string;
    type?: Type | string;
    isArray?: boolean;
    enum?: SwaggerEnumType;
    enumName?: string;
}
interface ApiQuerySchemaHost extends ParameterOptions {
    name?: string;
    schema: SchemaObject | ReferenceObject;
}
export type ApiQueryOptions = ApiQueryMetadata | ApiQuerySchemaHost;
export declare function ApiQuery(options: ApiQueryOptions): MethodDecorator;
export {};
//# sourceMappingURL=api-query.decorator.d.ts.map